{"version":3,"sources":["ActivityContext/index.js","ActivityContext/useLocalStorage.js","ActivityCounter/index.js","ActivityList/index.js","ActivityItem/index.js","ActivitySearch/index.js","AddActivityButton/index.js","Modal/index.js","Form/index.js","App/AppUI.js","App/index.js","index.js"],"names":["ActivityContext","React","createContext","ActivityProvider","props","itemName","initialValues","useState","loading","setLoading","error","setError","item","setItem","useEffect","setTimeout","parsedItem","localStorageItem","localStorage","getItem","JSON","parse","stringify","saveItem","newItem","stringifiedItem","useLocalStorage","activities","saveActivity","search","setSearch","openModal","setOpenModal","completeActivity","filter","activity","completed","length","totalActivities","searchedActivity","activityText","text","toLocaleLowerCase","searchText","includes","Provider","value","activityComplete","activityIndex","findIndex","newActivities","activityDelete","splice","addActivity","push","children","ActivityCounter","useContext","className","ActivityList","Fragment","ActivityItem","onClick","onComplete","onDelete","ActivitySearch","placeholder","onChange","e","target","AddActivityButton","prevState","Modal","ReactDOM","createPortal","document","getElementById","Form","newActivityValue","setNewActivityValue","onSubmit","preventDefault","alert","type","AppUI","map","App","render","StrictMode"],"mappings":"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","file":"static/js/main.6bd83547.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useLocalStorage } from \"./useLocalStorage\";\r\n\r\nconst ActivityContext = React.createContext();\r\n\r\nfunction ActivityProvider(props) {\r\n  const {\r\n    item: activities,\r\n    saveItem: saveActivity,\r\n    loading,\r\n    error,\r\n  } = useLocalStorage(\"ACTIVITY_V1\", []);\r\n  const [search, setSearch] = React.useState(\"\");\r\n  const [openModal, setOpenModal] = React.useState(false);\r\n\r\n  const completeActivity = activities.filter(\r\n    (activity) => activity.completed === true\r\n  ).length;\r\n\r\n  const totalActivities = activities.length;\r\n\r\n  let searchedActivity = [];\r\n\r\n  if (!search.length >= 1) {\r\n    searchedActivity = activities;\r\n  } else {\r\n    searchedActivity = activities.filter((activity) => {\r\n      const activityText = activity.text.toLocaleLowerCase();\r\n      const searchText = search.toLocaleLowerCase();\r\n      return activityText.includes(searchText);\r\n    });\r\n  }\r\n\r\n  const activityComplete = (text) => {\r\n    const activityIndex = activities.findIndex(\r\n      (activity) => activity.text === text\r\n    );\r\n\r\n    const newActivities = [...activities];\r\n    newActivities[activityIndex].completed =\r\n      !newActivities[activityIndex].completed;\r\n    saveActivity(newActivities);\r\n  };\r\n\r\n  const activityDelete = (text) => {\r\n    const activityIndex = activities.findIndex(\r\n      (activity) => activity.text === text\r\n    );\r\n\r\n    const newActivities = [...activities];\r\n    newActivities.splice(activityIndex, 1);\r\n    saveActivity(newActivities);\r\n  };\r\n\r\n  const addActivity = (text) => {\r\n    const newActivities = [...activities];\r\n    newActivities.push({\r\n      completed: false,\r\n      text,\r\n    });\r\n\r\n    saveActivity(newActivities);\r\n  };\r\n\r\n  return (\r\n    <ActivityContext.Provider\r\n      value={{\r\n        loading,\r\n        error,\r\n        completeActivity,\r\n        totalActivities,\r\n        search,\r\n        setSearch,\r\n        searchedActivity,\r\n        activityComplete,\r\n        activityDelete,\r\n        addActivity,\r\n        openModal,\r\n        setOpenModal,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </ActivityContext.Provider>\r\n  );\r\n}\r\n\r\nexport { ActivityContext, ActivityProvider };\r\n","import React from \"react\";\r\n\r\nfunction useLocalStorage(itemName, initialValues) {\r\n  const [loading, setLoading] = React.useState(true);\r\n  const [error, setError] = React.useState(false);\r\n  const [item, setItem] = React.useState(initialValues);\r\n\r\n  React.useEffect(() => {\r\n    setTimeout(() => {\r\n      try {\r\n        const localStorageItem = localStorage.getItem(itemName);\r\n\r\n        let parsedItem;\r\n\r\n        if (!localStorageItem) {\r\n          localStorage.setItem(itemName, JSON.stringify(initialValues));\r\n          parsedItem = initialValues;\r\n        } else {\r\n          parsedItem = JSON.parse(localStorageItem);\r\n        }\r\n\r\n        setItem(parsedItem);\r\n        setLoading(false);\r\n      } catch (error) {\r\n        setError(error);\r\n      }\r\n    }, 2000);\r\n  });\r\n\r\n  const saveItem = (newItem) => {\r\n    try {\r\n      const stringifiedItem = JSON.stringify(newItem);\r\n      localStorage.setItem(itemName, stringifiedItem);\r\n      setItem(newItem);\r\n    } catch (error) {\r\n      setError(error);\r\n    }\r\n  };\r\n\r\n  return { item, saveItem, error, loading };\r\n}\r\n\r\nexport { useLocalStorage };\r\n","import React from \"react\";\r\nimport { ActivityContext } from \"../ActivityContext\";\r\nimport \"./ActivityCounter.css\";\r\n\r\nfunction ActivityCounter() {\r\n  const { completeActivity, totalActivities } =\r\n    React.useContext(ActivityContext);\r\n  return (\r\n    <h2 className=\"activityCounter\">\r\n      Actividades Completas {completeActivity} de {totalActivities}\r\n    </h2>\r\n  );\r\n}\r\n\r\nexport { ActivityCounter };\r\n","import React from \"react\";\r\nimport \"./activityList.css\";\r\n\r\nfunction ActivityList(props) {\r\n  return (\r\n    <React.Fragment>\r\n      <section className=\"activityList\">\r\n        <ul>{props.children}</ul>\r\n      </section>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport { ActivityList };\r\n","import React from \"react\";\r\nimport \"./activityItem.css\";\r\n\r\nfunction ActivityItem(props) {\r\n  return (\r\n    <React.Fragment>\r\n      <li className=\"activityItem\">\r\n        <span\r\n          className={`Icon Icon-check ${\r\n            props.completed && \"Icon-check--active\"\r\n          }`}\r\n          onClick={props.onComplete}\r\n        >\r\n          âœ“\r\n        </span>\r\n        <p\r\n          className={`activityItem-p ${\r\n            props.completed && \"activityItem-p--complete\"\r\n          }`}\r\n        >\r\n          {props.text}\r\n        </p>\r\n        <span className=\"Icon Icon-delete\" onClick={props.onDelete}>\r\n          X\r\n        </span>\r\n      </li>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport { ActivityItem };\r\n","import React from \"react\";\r\nimport { ActivityContext } from \"../ActivityContext\";\r\nimport \"./ActivitySearch.css\";\r\n\r\nfunction ActivitySearch() {\r\n  const { search, setSearch } = React.useContext(ActivityContext);\r\n  const onSearchValuesChange = (e) => {\r\n    setSearch(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <input\r\n      className=\"activitySearch\"\r\n      placeholder=\"Que actividad deseas buscar...\"\r\n      value={search}\r\n      onChange={onSearchValuesChange}\r\n    />\r\n  );\r\n}\r\n\r\nexport { ActivitySearch };\r\n","import React from \"react\";\r\nimport \"./AddActivityButton.css\";\r\n\r\nfunction AddActivityButton(props) {\r\n  const buttonOpen = () => {\r\n    props.setOpenModal((prevState) => !prevState);\r\n  };\r\n\r\n  return (\r\n    <button className=\"addActivity\" onClick={buttonOpen}>\r\n      +\r\n    </button>\r\n  );\r\n}\r\n\r\nexport { AddActivityButton };\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./Modal.css\";\r\n\r\nfunction Modal({ children }) {\r\n  return ReactDOM.createPortal(\r\n    <div className=\"modal\">{children}</div>,\r\n    document.getElementById(\"modal\")\r\n  );\r\n}\r\n\r\nexport { Modal };\r\n","import React from \"react\";\r\nimport { ActivityContext } from \"../ActivityContext\";\r\nimport \"./Form.css\";\r\n\r\nfunction Form() {\r\n  const [newActivityValue, setNewActivityValue] = React.useState(\"\");\r\n  const { addActivity, setOpenModal } = React.useContext(ActivityContext);\r\n\r\n  const onCancel = () => {\r\n    setOpenModal(false);\r\n  };\r\n\r\n  const onChange = (e) => {\r\n    setNewActivityValue(e.target.value);\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (newActivityValue.length >= 1) {\r\n      addActivity(newActivityValue);\r\n      setOpenModal(false);\r\n    } else {\r\n      alert(\"La actividad no puede estar vacÃ­a\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <h3>CreÃ¡ tu Actividad:</h3>\r\n      <label>Ingresa AquÃ­:</label>\r\n      <textarea\r\n        onChange={onChange}\r\n        placeholder=\"Ej: Aprobar todas las materias donde estudio...\"\r\n      ></textarea>\r\n      <div className=\"TodoForm-buttonContainer\">\r\n        <button\r\n          className=\"TodoForm-button TodoForm-button-cancel\"\r\n          onClick={onCancel}\r\n          type=\"button\"\r\n        >\r\n          Cancelar\r\n        </button>\r\n        <button className=\"TodoForm-button TodoForm-button-add\" type=\"submit\">\r\n          AÃ±adir Actividad\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport { Form };\r\n","import React from \"react\";\r\nimport { ActivityCounter } from \"../ActivityCounter\";\r\nimport { ActivityList } from \"../ActivityList\";\r\nimport { ActivityItem } from \"../ActivityItem\";\r\nimport { ActivitySearch } from \"../ActivitySearch\";\r\nimport { AddActivityButton } from \"../AddActivityButton\";\r\nimport \"./spinner.css\";\r\nimport { ActivityContext } from \"../ActivityContext\";\r\nimport { Modal } from \"../Modal/\";\r\nimport { Form } from \"../Form\";\r\n\r\nfunction AppUI() {\r\n  const {\r\n    error,\r\n    loading,\r\n    searchedActivity,\r\n    activityComplete,\r\n    activityDelete,\r\n    openModal,\r\n    setOpenModal,\r\n  } = React.useContext(ActivityContext);\r\n  return (\r\n    <React.Fragment>\r\n      <ActivityCounter />\r\n\r\n      <ActivitySearch />\r\n\r\n      <ActivityList>\r\n        {loading && <p className=\"spinner\"></p>}\r\n        {error && <p>ReacrgÃ¡ la pagina, hubo un error...</p>}\r\n        {!loading && !searchedActivity.length && (\r\n          <p>No se encontraron actividades, porque no creas una Actividad..</p>\r\n        )}\r\n        {searchedActivity.map((activity) => (\r\n          <ActivityItem\r\n            key={activity.text}\r\n            text={activity.text}\r\n            completed={activity.completed}\r\n            onComplete={() => activityComplete(activity.text)}\r\n            onDelete={() => activityDelete(activity.text)}\r\n          />\r\n        ))}\r\n      </ActivityList>\r\n\r\n      {openModal && (\r\n        <Modal>\r\n          <Form />\r\n        </Modal>\r\n      )}\r\n\r\n      <AddActivityButton setOpenModal={setOpenModal} />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport { AppUI };\r\n","import React from \"react\";\nimport { ActivityProvider } from \"../ActivityContext\";\n\nimport { AppUI } from \"./AppUI\";\n\nfunction App() {\n  return (\n    <ActivityProvider>\n      <AppUI />\n    </ActivityProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}